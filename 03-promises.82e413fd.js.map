{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrBD,SAASC,cAAc,UAa/BG,iBAAiB,SAASC,IACtCA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAYK,MAAOD,IACtCE,YAAW,KAdf,IAAuBC,EAAUC,EAAVD,EAeHH,EAAI,EAfSI,EAeNZ,EAAWS,MAAQD,EAAIL,EAAUM,MAdpCI,KAAKC,SAAW,GAGpCC,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAG9DG,EAAAjB,GAASkB,OAAOE,QAAQ,sBAAoBP,QAAeC,MAQG,GAC3DZ,EAAWS,MAAQD,EAAIL,EAAUM,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name = delay]');\nconst stepInput = document.querySelector('[name = step]');\nconst amountInput = document.querySelector('[name = amount]');\nconst promiseButton = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\npromiseButton.addEventListener('click', e => {\n  e.preventDefault();\n  for (let i = 0; i <= amountInput.value; i++) {\n    setTimeout(() => {\n      createPromise(i + 1, delayInput.value + i * stepInput.value);\n    }, delayInput.value + i * stepInput.value);\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","e","preventDefault","i","value","setTimeout","position","delay","Math","random","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.82e413fd.js.map"}