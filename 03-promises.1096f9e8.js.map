{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrBD,SAASC,cAAc,UAa/BG,iBAAiB,SAAS,SAAAC,G,kBAGpCC,YAAW,WAdf,IAAuBC,EAAUC,EAAVD,EAeHE,EAAI,EAfSD,EAeNT,EAAWW,MAAQD,EAAIP,EAAUQ,MAdpCC,KAAKC,SAAW,GAGpCC,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGtEK,EAAAhB,GAASiB,OAAOG,QAAQ,sBAAqCD,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAShET,EAAWW,MAAQD,EAAIP,EAAUQ,M,EAJtCL,EAAEa,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAYO,MAAOS,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name = delay]');\nconst stepInput = document.querySelector('[name = step]');\nconst amountInput = document.querySelector('[name = amount]');\nconst promiseButton = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\npromiseButton.addEventListener('click', e => {\n  e.preventDefault();\n  for (let i = 0; i <= amountInput.value; i++) {\n    setTimeout(() => {\n      createPromise(i + 1, delayInput.value + i * stepInput.value);\n    }, delayInput.value + i * stepInput.value);\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","e","setTimeout","position","delay","i","value","Math","random","$parcel$interopDefault","Notify","success","concat","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.1096f9e8.js.map"}