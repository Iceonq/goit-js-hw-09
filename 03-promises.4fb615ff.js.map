{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrBD,SAASC,cAAc,UAa/BG,iBAAiB,SAAS,SAAAC,G,kBAGpCC,YAAW,WAdf,IAAuBC,EAAUC,EAAVD,EAgBfE,EAAI,EAhBqBD,EAiBzBE,SAASX,EAAWY,OAASF,EAAIC,SAASR,EAAUS,OAhBpCC,KAAKC,SAAW,GAGpCC,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAGtEM,EAAAjB,GAASkB,OAAOG,QAAQ,sBAAqCD,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GAYhEE,SAASX,EAAWY,OAASF,EAAIC,SAASR,EAAUS,O,EAPzDN,EAAEc,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAYQ,MAAOS,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name = delay]');\nconst stepInput = document.querySelector('[name = step]');\nconst amountInput = document.querySelector('[name = amount]');\nconst promiseButton = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\npromiseButton.addEventListener('click', e => {\n  e.preventDefault();\n  for (let i = 0; i < amountInput.value; i++) {\n    setTimeout(() => {\n      createPromise(\n        i + 1,\n        parseInt(delayInput.value) + i * parseInt(stepInput.value)\n      );\n    }, parseInt(delayInput.value) + i * parseInt(stepInput.value));\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","e","setTimeout","position","delay","i","parseInt","value","Math","random","$parcel$interopDefault","Notify","success","concat","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.4fb615ff.js.map"}